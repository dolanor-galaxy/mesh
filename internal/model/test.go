package model

import (
	"github.com/robrohan/mesh/internal/algebra"
	"github.com/robrohan/mesh/internal/geometry"
)

// CreateTestPoly make a default cube for render testing
func CreateTestPoly() (geometry.Polyhedron, error) {
	modelData := phoCube
	vertLen := len(modelData)
	voffset := vertLen / int(geometry.VertexSize)

	verts := make([]geometry.Vertex, voffset, voffset)
	index := make([]uint16, voffset, voffset)

	poly := geometry.Polyhedron{
		Vertices: verts,
		Indices:  index,
	}

	numRow := vertLen / int(geometry.VertexSize)
	for i := 0; i < numRow; i++ {
		row := i * int(geometry.VertexSize)
		poly.Vertices[i] = geometry.Vertex{
			Pos: algebra.Vector{
				X: modelData[row+0],
				Y: modelData[row+1],
				Z: modelData[row+2],
				W: 0,
			},
			Color: algebra.Vector{
				X: modelData[row+3],
				Y: modelData[row+4],
				Z: modelData[row+5],
				W: 1,
			},
			TexCoord: algebra.Vector{
				X: modelData[row+6],
				Y: modelData[row+7],
				Z: 0,
				W: 0,
			},
			Normal: algebra.Vector{
				X: modelData[row+8],
				Y: modelData[row+9],
				Z: modelData[row+10],
				W: 0,
			},
			Tangent: algebra.Vector{
				X: modelData[row+11],
				Y: modelData[row+12],
				Z: modelData[row+13],
				W: 0,
			},
		}
		poly.Indices[i] = uint16(i)
	}
	return poly, nil
}

var phoCube = []float64{
	//0     1     2     3      4      5    6  7  8  9  A  B  C  D
	-1.0, -1.0, -1.0, 0.583, 0.771, 0.014, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, -1.0, 1.0, 0.609, 0.115, 0.436, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, 1.0, 1.0, 0.327, 0.483, 0.844, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, 1.0, -1.0, 0.822, 0.569, 0.201, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, -1.0, -1.0, 0.435, 0.602, 0.223, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, 1.0, -1.0, 0.310, 0.747, 0.185, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, -1.0, 1.0, 0.597, 0.770, 0.761, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, -1.0, -1.0, 0.559, 0.436, 0.730, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, -1.0, -1.0, 0.359, 0.583, 0.152, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, 1.0, -1.0, 0.483, 0.596, 0.789, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, -1.0, -1.0, 0.559, 0.861, 0.639, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, -1.0, -1.0, 0.195, 0.548, 0.859, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, -1.0, -1.0, 0.014, 0.184, 0.576, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, 1.0, 1.0, 0.771, 0.328, 0.970, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, 1.0, -1.0, 0.406, 0.615, 0.116, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, -1.0, 1.0, 0.676, 0.977, 0.133, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, -1.0, 1.0, 0.971, 0.572, 0.833, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, -1.0, -1.0, 0.140, 0.616, 0.489, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, 1.0, 1.0, 0.997, 0.513, 0.064, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, -1.0, 1.0, 0.945, 0.719, 0.592, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, -1.0, 1.0, 0.543, 0.021, 0.978, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, 1.0, 1.0, 0.279, 0.317, 0.505, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, -1.0, -1.0, 0.167, 0.620, 0.077, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, 1.0, -1.0, 0.347, 0.857, 0.137, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, -1.0, -1.0, 0.055, 0.953, 0.042, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, 1.0, 1.0, 0.714, 0.505, 0.345, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, -1.0, 1.0, 0.783, 0.290, 0.734, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, 1.0, 1.0, 0.722, 0.645, 0.174, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, 1.0, -1.0, 0.302, 0.455, 0.848, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, 1.0, -1.0, 0.225, 0.587, 0.040, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, 1.0, 1.0, 0.517, 0.713, 0.338, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, 1.0, -1.0, 0.053, 0.959, 0.120, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, 1.0, 1.0, 0.393, 0.621, 0.362, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, 1.0, 1.0, 0.673, 0.211, 0.457, 0, 0, 0, 0, 0, 0, 0, 0,
	-1.0, 1.0, 1.0, 0.820, 0.883, 0.371, 0, 0, 0, 0, 0, 0, 0, 0,
	1.0, -1.0, 1.0, 0.982, 0.099, 0.879, 0, 0, 0, 0, 0, 0, 0, 0}
